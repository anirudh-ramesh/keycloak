name: Deploy with Docker Compose

on:
  push:
    branches:
      - master
  workflow_dispatch:

# env:
#   ECR_REPOSITORY: goodenough 
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install Docker Compose
        run: curl -L https://raw.githubusercontent.com/docker/compose-cli/main/scripts/install/install_linux.sh | sh

      - name: Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        
      # - name: Creating Volume
      #  run: docker volume create my_data

     # - name: Build and push <YOUR_IMAGE>
      #  id: build-image
       # env:
        #  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          #IMAGE_TAG: ${{ github.sha }}
     #   run:
          # sudo docker context use default
      #    docker compose build
       #   docker compose push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
       #   echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
        # uses: docker/build-push-action@v2
        # with:
        #   context: .
        #   push: true
        #   cache-from: type=gha,scope=<YOUR_IMAGE>
        #   cache-to: type=gha,scope=<YOUR_IMAGE>
        #   tags: |
        #     ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:<YOUR_IMAGE>-${{ github.sha }}
        #     ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:<YOUR_IMAGE>-latest
        
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
#       - name: Creating Env file
#         run: |
#            chmod +x ./scripts.sh
#            ./scripts.sh
#         shell: bash
        
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: 570110885728.dkr.ecr.ap-south-1.amazonaws.com
#           ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           ECR_REPOSITORY: goodenough 
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS

          docker compose --profile all  build
          docker compose --profile all push 

      - name: Docker context
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
#           ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          GITHUB_SHA: ${{ github.sha }}
        run: |
          docker context create ecs ecs-context --from-env
          docker context use ecs-context
          AWS_ACCESS_KEY_ID=AKIAYJPKBX5QBXPT44OM AWS_SECRET_ACCESS_KEY=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 AWS_DEFAULT_REGION=ap-south-1  docker compose --profile all up -d
